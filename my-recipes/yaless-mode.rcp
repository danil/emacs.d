(my-after-init
  (global-set-key (my-kbd "C-f") 'yaless-mode-on))

(defun yaless-mode-on ()
  (interactive)

  (when (and (buffer-file-name))
    ;; (buffer-modified-p)
    ;; (y-or-n-p (format "Save file %s? " (buffer-file-name)))
    (call-interactively 'save-buffer))

  (call-interactively 'yaless-mode))

(defun yaless-mode ()
  (interactive)

  (let* ((one-more-repeat t)
         (keynames '("j" "k" "f" "b" "n" "p" "u" "d" "0" "^" "$" "g" "G")))

    (while one-more-repeat
      (message "Scroll: j, k, u, d; move: f, b, n, p; line begin/end: 0, ^, $; buffer begin/end: g, G")

      (let* ((event (read-event))
             (keyname (format-kbd-macro (vector event) nil)))
        (clear-this-command-keys t)

        (if (member keyname keynames)
            (progn
              (cond ((equal keyname "j") (condition-case nil
                                             (scroll-up-line)
                                           (end-of-buffer)))

                    ((equal keyname "k") (condition-case nil
                                             (scroll-down-line)
                                           (beginning-of-buffer)))

                    ((equal keyname "u") (condition-case nil
                                             (scroll-down)
                                           (beginning-of-buffer)))

                    ((equal keyname "d") (condition-case nil
                                             (scroll-up)
                                           (end-of-buffer)))

                    ((equal keyname "f") (forward-char))
                    ((equal keyname "b") (backward-char))
                    ((equal keyname "n") (next-line))
                    ((equal keyname "p") (previous-line))

                    ((equal keyname "0") (beginning-of-line))
                    ((equal keyname "^") (beginning-of-line-text))
                    ((equal keyname "$") (call-interactively 'move-end-of-line))

                    ((equal keyname "g") (beginning-of-buffer))
                    ((equal keyname "G") (end-of-buffer)))

              (setq last-input-event nil))

          (setq one-more-repeat nil)
          (push last-input-event unread-command-events))))))
